<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kaiya Xiong&#39;s Blog</title><link>https://kaiyai.com/</link><description>Recent content on Kaiya Xiong&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 01 Aug 2018 21:38:52 +0800</lastBuildDate><atom:link href="https://kaiyai.com/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://kaiyai.com/about/</link><pubDate>Wed, 01 Aug 2018 21:38:52 +0800</pubDate><guid>https://kaiyai.com/about/</guid><description>&lt;p&gt;My name is Kaiya Xiong, I&amp;rsquo;m a graduate student of Jinan University, major in Software Engineering.&lt;/p&gt;
&lt;p&gt;My research interest:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security and Privacy of Machine Learning&lt;/li&gt;
&lt;li&gt;Blockchain Consensus&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Homepage:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gs.kaiyai.com&#34;&gt;Google Sites&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://about.kaiyai.com&#34;&gt;Academic Homepage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Reach me at:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Huangpu Avenue West No.601 Jinan University, Guangzhou, China, 510632&lt;/li&gt;
&lt;li&gt;Email: eGlvbmdrYWl5YUBnbWFpbC5jb20=&lt;/li&gt;
&lt;li&gt;Phone: Kzg2MTMxNjgzMDE4ODQ=&lt;/li&gt;
&lt;li&gt;Wechat: KzE1MjAzMTQxOTk0&lt;/li&gt;
&lt;/ul&gt;</description></item><item><title>粤港澳大湾区能否助力中国崛起？</title><link>https://kaiyai.com/post/cantonhkmo/</link><pubDate>Mon, 01 Apr 2019 00:16:09 +0800</pubDate><guid>https://kaiyai.com/post/cantonhkmo/</guid><description>&lt;p&gt;考虑粤港澳大湾区问题不能仅仅把它和世界级湾区如美国纽约湾区、旧金山湾区、日本东京湾区进行对比，而应该考虑粤港澳大湾区对中国经济，甚至对世界经济格局的影响。&lt;/p&gt;
&lt;p&gt;在粤港澳三大经济区内施行怎样的关税政策？&lt;/p&gt;
&lt;p&gt;应该像最初欧元一样，将粤港澳地区作为“亚元”的小范围试点区，一方面方便粤港澳地区投资及关税，另一方便也能进一步削弱美元的国际地位，为中国主导的“亚元区”做铺垫。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=eBtkHaLxygk&amp;amp;t=3332s&#34;&gt;视频：粤港澳大湾区能否助力中国崛起？&lt;/a&gt;&lt;/p&gt;</description></item><item><title>众声喧哗，我只歌唱❤️</title><link>https://kaiyai.com/post/jackycheung/</link><pubDate>Sun, 31 Mar 2019 04:03:09 +0800</pubDate><guid>https://kaiyai.com/post/jackycheung/</guid><description>&lt;iframe frameborder=&#34;no&#34; border=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; width=330 height=450 src=&#34;//music.163.com/outchain/player?type=0&amp;id=2587836003&amp;auto=1&amp;height=430&#34;&gt;&lt;/iframe&gt;
&lt;!-- &lt;iframe style=&#34;max-width: 100%&#34;
class=&#34;music163&#34;
frameborder=&#34;no&#34;
border=&#34;0&#34;
marginwidth=&#34;0&#34;
marginheight=&#34;0&#34;
width=&#34;330&#34;
height=&#34;86&#34;
src=&#34;//music.163.com/outchain/player?type=2&amp;id=188227&amp;auto=0&amp;height=66&#34;&gt;
&lt;/iframe&gt;--&gt;</description></item><item><title>如何做研究</title><link>https://kaiyai.com/post/howdoresearch/</link><pubDate>Wed, 27 Mar 2019 12:03:09 +0800</pubDate><guid>https://kaiyai.com/post/howdoresearch/</guid><description>&lt;blockquote&gt;
&lt;p&gt;偶遇 Thomas，请教他博士期间如何做到这么高产的。Thomas 说做 research 不是做工程，一篇 paper 就是提出一个 idea 并证明其可行性，你费了很大力气做了很多功能，也不见得有人会用。其实读 paper 的人最关心的就是你的 core insight，你的系统设计需要是 fundamentally correct，evaluation 符合预期就行。如果他需要的话，自己会去实现出来完整的产品。感觉挺有道理的，听人说如果只是性能好，却说不出个所以然，或者没有选择看起来最正确的设计方案，确实不好发 paper。之前一直想着把系统做得尽量 solid，做到能开箱即用的程度，不过确实很费时间，最后板上的逻辑资源都不够了，而且现实中我们 research 部门实习生写的代码确实很难被产品部门用上。&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>情书💌</title><link>https://kaiyai.com/post/loveletter/</link><pubDate>Fri, 22 Mar 2019 04:03:09 +0800</pubDate><guid>https://kaiyai.com/post/loveletter/</guid><description>&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;stdio.h&amp;gt;
int main()
{
double world;
unsigned letter;
short stay;
long memories;
printf(&amp;quot;I miss you.\n&amp;quot;);
return 0;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;两个人的世界，一封没有署名的信，短暂的重逢后，留下的只是回忆，我想你，我爱的人。&lt;/p&gt;</description></item><item><title>感想</title><link>https://kaiyai.com/post/thoughts/</link><pubDate>Fri, 22 Mar 2019 02:03:09 +0800</pubDate><guid>https://kaiyai.com/post/thoughts/</guid><description>&lt;p&gt;苏格拉底和爱情失意者的对话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;苏: 如果他认为离开你是一种幸福呢?&lt;/p&gt;
&lt;p&gt;失: 不会的! 他曾经跟我说，只有跟我在一起的时候他才感觉到幸福!&lt;/p&gt;
&lt;p&gt;苏: 那是曾经，是过去，可他现在并不这么认为了。&lt;/p&gt;
&lt;p&gt;失: 这就是说，他一直在骗我?&lt;/p&gt;
&lt;p&gt;苏: 不，他一直对你很忠诚，当他爱你的时候，他和你在一起，现在他不爱你了，他就离去了，世界上再没有比这更大的忠诚。如果他不再爱你，却还装的对你很有情谊, 甚至跟你结婚, 生子, 那才是真正的欺骗呢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面这段话是18年1月看到的，当时还没感觉有什么。现在才觉得&amp;hellip;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一些人懒得在关系中做出努力，那些琐碎的抱怨积累起来，终有一天将他们分开；而另一些人则选择用善意去对待对方，并且不断提升双方在细节上的沟通。他们之所以能够牢牢联结在一起，正是因为在每个可能可以选择猜疑的小瞬间里，他们都选择了用善意去揣测和对待。&lt;/p&gt;
&lt;p&gt;所以在选择伴侣的时候不能自我欺骗，更加不能“自毁”。我们无法抱着“改变一个人”的心态进入到一段关系，因为改变，从来都只能由某个人自己来进行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还有下面这一段：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;他在多年研究后总结到两种伴侣最本质的区别：那些“成功型”伴侣习惯去搜索伴侣身上那些值得欣赏、感谢的部分，他们会有意识、有目的地建立起这种尊重和欣赏的习惯；而那些“灾难型”伴侣则会注意和寻找伴侣身上的错误，他们习惯表达批评，而不是尊重和欣赏。&lt;/p&gt;
&lt;p&gt;后者会带来“蔑视”，这一在众多促使分手的因素中的头号杀手。那些非常微小的蔑视对方的举动也会引发对方的愤恨。&lt;/p&gt;
&lt;p&gt;前者则是一种“善意”（kindness）。研究中发现，这一因素最能准确预测一段满意而稳固的婚姻。而这里所说的善意，正是在许多个细节的瞬间里，你选择对待对方的态度和方式。&lt;/p&gt;
&lt;/blockquote&gt;</description></item><item><title>Disqus科学使用方式</title><link>https://kaiyai.com/post/disqus/</link><pubDate>Wed, 12 Dec 2018 16:50:00 +0800</pubDate><guid>https://kaiyai.com/post/disqus/</guid><description>
&lt;h3 id=&#34;前言&#34;&gt;前言&lt;/h3&gt;
&lt;p&gt;由于某些原因Disqus这个很多博客使用的评论系统没法在大陆使用了。本文记录一下本博客对Disqus的改造过程，以供参考。说一下本博客的情况：基于Hugo静态博客生成器、使用&lt;a href=&#34;https://github.com/olOwOlo/hugo-theme-even&#34;&gt;Hugo Even&lt;/a&gt;主题。网上有很多教程一般都需要有一个自己的VPS来运行转发程序，但是我发现使用Heroku来跑这个转发程序效果还不错。
总体架构：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lib.azfs.com.cn/20181212154460512397630.png-l&#34; alt=&#34;图片来源:blog.fooleap.org&#34; /&gt;&lt;/p&gt;
&lt;p&gt;此处利用了一个PHP程序来转发Disqus API请求 &lt;a href=&#34;https://github.com/fooleap/disqus-php-api&#34;&gt;https://github.com/fooleap/disqus-php-api&lt;/a&gt;。
首先JS检测用户网络是否能够访问Disqus，如果能就直接访问原版Disqus。如果不能则请求自己的服务器通过PHP程序转发Disqus API请求，并显示自制的Disqus评论框。&lt;/p&gt;
&lt;h3 id=&#34;一-disqus&#34;&gt;一、Disqus&lt;/h3&gt;
&lt;p&gt;使用 API 实现匿名评论功能，需在 Disqus 后台&lt;a href=&#34;https://disqus.com/admin/settings/community/&#34;&gt;网站设置&lt;/a&gt;，设置相关选项。
* 开启匿名评论，Guest Commenting 项中勾选 Allow guests to comment。
* 若需评论免审，Pre-moderation 项选中 None。&lt;/p&gt;
&lt;p&gt;必须在 &lt;a href=&#34;https://disqus.com/api/applications/&#34;&gt;Disqus API&lt;/a&gt; 申请注册一个 App，取得相关的公钥（&lt;strong&gt;API Key&lt;/strong&gt;）、私钥（&lt;strong&gt;API Secret&lt;/strong&gt;），并填写于后端的配置文件 &lt;code&gt;config.php&lt;/code&gt; 中。&lt;/p&gt;
&lt;p&gt;App 设置方面，回调链接请填写 &lt;code&gt;login.php&lt;/code&gt; 文件的绝对地址，可根据自己情况填写。&lt;/p&gt;
&lt;h3 id=&#34;二-heroku&#34;&gt;二、Heroku&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;首先在&lt;a href=&#34;https://heroku.com&#34;&gt;Heroku&lt;/a&gt;注册账号，可以直接通过Github登录；&lt;/li&gt;
&lt;li&gt;新建一个App，填写App名字，选择位置如下图：
&lt;img src=&#34;https://lib.azfs.com.cn/2018121215446058857644.png-l&#34; alt=&#34;2018121215446058857644.png&#34; /&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;选择Deploy部署，可以通过Heroku CLI部署或者通过关联Github Repo部署，很方便。但是这里不建议通过Github部署，因为PHP文件里有些敏感信息，所以建议通过Heroku CLI部署。Heroku CLI安装过程省略，官网上有。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ heroku login //调起浏览器登录Heroku账号
$ heroku git:clone -a disqusproxy //克隆Heroku的Git仓库，将disqusproxy替换为你自己的App名字
$ cd disqusproxy
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将&lt;a href=&#34;https://github.com/fooleap/disqus-php-api&#34;&gt;PHP程序&lt;/a&gt;下载下来，将api文件夹内的文件都放到这个文件夹内，修改config.php文件，将上面获取的API Key、API Secret填入配置文件中，在根据配置文件提示填入你的Disqus账号信息。另外由于Gravatar在国内也不太稳定可以将配置文件下面的Gravatar CDN修改为&lt;code&gt;//gravatar.loli.net/avatar/&lt;/code&gt;，配置文件如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lib.azfs.com.cn/20181212154460966999228.png-l&#34; alt=&#34;20181212154460966999228.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;修改完后使用Git推送到heroku&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ git add .
$ git commit -am &amp;quot;make it better&amp;quot;
$ git push heroku master //Git工作流，推送到Heroku的Git仓库
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以测试访问https://{app name}.herokuapp.com/login.php判断是否安装成功。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;三-前端&#34;&gt;三、前端&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将&lt;a href=&#34;https://github.com/fooleap/disqus-php-api&#34;&gt;PHP程序&lt;/a&gt;Repo里的iDisqus.min.css和iDisqus.min.js文件下载下来放入static文件夹内。&lt;/li&gt;
&lt;li&gt;由于本博客采用的主题有Disqus功能，所以要先把以前的Div元素和涉及Disqus的代码清除。&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引入CSS&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;link rel=&amp;quot;stylesheet&amp;quot; href=&amp;quot;path/to/iDisqus.min.css&amp;quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;注：由于本博客采用的是&lt;a href=&#34;https://github.com/olOwOlo/hugo-theme-even&#34;&gt;Even主题&lt;/a&gt;，所以以下针对前端的修改在&lt;code&gt;themes/even/layouts/partials/comments.html&lt;/code&gt;中，不同主题请自行修改。&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建容器&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;div id=&amp;quot;comment&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引入JS&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;script src=&amp;quot;path/to/iDisqus.min.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建实例&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var disq = new iDisqus(&#39;comment&#39;, {
forum: &#39;kyxiong&#39;,
api: &#39;https://dqproxy.herokuapp.com/&#39;,
site: &#39;https://kaiyai.com&#39;,
mode: 1,
timeout: 3000,
init: true
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://lib.azfs.com.cn/20181212154461004878666.png-l&#34; alt=&#34;20181212154461004878666.png&#34; /&gt;&lt;/p&gt;
&lt;p&gt;参数解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;forum&lt;/code&gt;: disqus中forum的shortname&lt;/li&gt;
&lt;li&gt;&lt;code&gt;api&lt;/code&gt;: 上文中PHP转发程序的地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;site&lt;/code&gt;: 欲开启Disqus科学评论的网站地址&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mode&lt;/code&gt;: 模式：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;1&lt;/code&gt;: 检测能否访问 Disqus，若能则加载 Disqus 原生评论框，超时则加载简易评论框&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&lt;/code&gt;: 仅加载简易评论框&lt;/li&gt;
&lt;li&gt;&lt;code&gt;3&lt;/code&gt;: 同时加载两种评论框，先显示简易评论框，Disqus 加载完成则切换至 Disqus 评论框&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;timeout&lt;/code&gt;: 超时时间设置，检测用户网络，如果连接原生Disqus超过这个时间则开启本转发程序转发Disqus API请求。单位毫秒。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;init&lt;/code&gt;: 是否自动初始化&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;四-大功告成&#34;&gt;四、大功告成！&lt;/h3&gt;
&lt;p&gt;使用Hugo生成静态网站预览，记得本地预览默认是关闭Disqus的，要注释掉comments中的代码&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;if (window.location.hostname === &#39;localhost&#39;) return;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;放到生产环境后记得再注释回来哟。&lt;/p&gt;</description></item><item><title>阅读与写作</title><link>https://kaiyai.com/post/readwrite/</link><pubDate>Sat, 08 Dec 2018 00:27:00 +0800</pubDate><guid>https://kaiyai.com/post/readwrite/</guid><description>&lt;p&gt;首先我就告诉你，所有的文如泉涌和才思敏捷都归根于大量的阅读。&lt;/p&gt;
&lt;p&gt;你以为别人每天都能写上万字是轻轻松松吗？全是因为他或者她过人的文笔吗？&lt;/p&gt;
&lt;p&gt;如果你这样想的话，那你真是天真的可笑，甚至可悲！&lt;/p&gt;
&lt;p&gt;要知道，没有谁不需要努力就可以得到自己想要的，也没有人懒惰到不收集阅览大量资料就对一件事情了解的那么巨细，就可以写出上万字的文章！&lt;/p&gt;
&lt;p&gt;你说他或者她，文笔实在太好，所以能够天马行空。你说自己是因为没有他或者她那样的天赋。要不然我也可以写字出书。&lt;/p&gt;
&lt;p&gt;要知道，全世界百分之九十五以上甚至更多的人都还达不到可以拼天赋的程度！只有懒惰鬼才张口闭口把天赋挂念着。&lt;/p&gt;
&lt;p&gt;你所谓的“天赋”，只不过是他或者她从小就看书所累集的华丽词藻。只不过是他或者她，空闲就记录生活细节的习惯。&lt;/p&gt;
&lt;p&gt;你说你的生活太无聊，无事可写，无事值得记录！&lt;/p&gt;
&lt;p&gt;谁的生活又能够百分百有趣呢，无趣，只不过是你没有善于发现善于欣赏的眼睛，没有足够细腻的心思。&lt;/p&gt;
&lt;p&gt;你又说，我一个大男人，心思要那么细腻干嘛？&lt;/p&gt;
&lt;p&gt;我说，心思细腻要足够心思缜密才行啊。你逻辑思维够足吗？这时你就呆了！还是拼天赋嘛！&lt;/p&gt;
&lt;p&gt;你错了，逻辑思维是可以培养出来的。只有不努力思考的人，没有蠢人。逻辑思维的培养，比如你可以多看看心理学啊，逻辑思维书籍啊等等。&lt;/p&gt;
&lt;p&gt;所以，关键还在于阅读。&lt;/p&gt;
&lt;p&gt;邓超说，知识改变命运！&lt;/p&gt;
&lt;p&gt;于莎莎说，芝士改变命运！&lt;/p&gt;
&lt;p&gt;现在你笑了～&lt;/p&gt;
&lt;p&gt;对的，知识改变命运，改变不了也可以改变我们的思维方式。而获取知识最快捷的方法就是阅读！&lt;/p&gt;
&lt;p&gt;现在明白了吧，所有的文如泉涌和才思敏捷都源于一个人的大量阅读。就是简单的字面意思，多阅读才能有好文才！&lt;/p&gt;</description></item><item><title>My Girlfriend</title><link>https://kaiyai.com/post/girlfriend/</link><pubDate>Tue, 04 Dec 2018 13:09:00 +0800</pubDate><guid>https://kaiyai.com/post/girlfriend/</guid><description>&lt;p&gt;&lt;img src=&#34;https://driveindex.herokuapp.com/Girlfriend.jpg?thumbnails=small&#34; alt=&#34;My Girl Friend!&#34; /&gt;&lt;/p&gt;</description></item><item><title>CNN in Tensorflow</title><link>https://kaiyai.com/post/tfcnn/</link><pubDate>Tue, 14 Aug 2018 01:03:09 +0800</pubDate><guid>https://kaiyai.com/post/tfcnn/</guid><description>&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import tensorflow as tf
from tensorflow.examples.tutorials.mnist import input_data
# number 1 to 10 data
mnist = input_data.read_data_sets(&#39;MNIST_data&#39;, one_hot=True)
def compute_accuracy(v_xs, v_ys): # validation xs and validation ys
global prediction
y_pre = sess.run(prediction, feed_dict={xs: v_xs, keep_prob: 1})
correct_prediction = tf.equal(tf.arg_max(y_pre, 1), tf.arg_max(v_ys, 1))
accuracy = tf.reduce_mean(tf.cast(correct_prediction, tf.float32))
result = sess.run(accuracy, feed_dict={xs: v_xs, ys: v_ys, keep_prob: 1})
return result
def weight_variable(shape):
initial = tf.truncated_normal(shape, stddev=0.1)
return tf.Variable(initial)
def bias_variable(shape):
initial = tf.constant(0.1, shape=shape)
return tf.Variable(initial)
def conv2d(x, W):
# stride [1, x_movement, y_movement, 1]
# must have strides[0] = stride[4] = 1
return tf.nn.conv2d(x, W, strides=[1, 1, 1, 1], padding=&#39;SAME&#39;)
def max_pool_2x2(x):
# stride [1, x_movement, y_movement, 1]
return tf.nn.max_pool(x, ksize=[1, 2, 2, 1], strides=[1, 2, 2, 1], padding=&#39;SAME&#39;)
# define placeholder for inputs to network
xs = tf.placeholder(tf.float32, [None, 784])/255 # 28x28
ys = tf.placeholder(tf.float32, [None, 10])
keep_prob = tf.placeholder(tf.float32)
x_image = tf.reshape(xs, [-1, 28, 28, 1])
# conv1 layer #
W_conv1 = weight_variable([5, 5, 1, 32]) # patch 5x5, insize 1, outsize 32
b_conv1 = bias_variable([32])
h_conv1 = tf.nn.relu(conv2d(x_image, W_conv1) + b_conv1) # output size 28x28x32
h_pool1 = max_pool_2x2(h_conv1) # output size 14x14x32
# conv2 layer #
W_conv2 = weight_variable([5, 5, 32, 64]) # patch 5x5, insize 32, outsize 64
b_conv2 = bias_variable([64])
h_conv2 = tf.nn.relu(conv2d(h_pool1, W_conv2) + b_conv2) # output size 14x14x64
h_pool2 = max_pool_2x2(h_conv2) # output size 7x7x64
# func1 layer #
W_fc1 = weight_variable([7*7*64, 1024])
b_fc1 = bias_variable([1024])
# [n_samples, 7 ,7, 64] -&amp;gt;&amp;gt; [n_samples, 7*7*64]
h_pool2_flat = tf.reshape(h_pool2, [-1, 7*7*64])
h_fc1 = tf.nn.relu(tf.matmul(h_pool2_flat, W_fc1) + b_fc1)
h_fc1_drop = tf.nn.dropout(h_fc1, keep_prob)
# func2 layer #
W_fc2 = weight_variable([1024, 10])
b_fc2 = bias_variable([10])
prediction = tf.nn.softmax(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)
# the error between prediction and real data
cross_entropy = tf.reduce_mean(-tf.reduce_sum(ys * tf.log(prediction), reduction_indices=[1])) # loss
train_step = tf.train.AdamOptimizer(1e-4).minimize(cross_entropy)
sess = tf.Session()
# important step
sess.run(tf.global_variables_initializer())
for i in range(10000):
batch_xs, batch_ys = mnist.train.next_batch(100)
sess.run(train_step, feed_dict={xs: batch_xs, ys: batch_ys, keep_prob: 0.5})
if i % 500 == 0:
print(compute_accuracy(mnist.test.images[:1000], mnist.test.labels[:1000]))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Accuracy:
&lt;img src=&#34;https://ws3.sinaimg.cn/large/006tNbRwgy1fu8kjwzuqvj31es0ragot.jpg&#34; alt=&#34;Accuracy&#34; /&gt;&lt;/p&gt;</description></item></channel></rss>